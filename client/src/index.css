@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: hsl(217 33% 97%);

  --foreground: hsl(215 25% 27%);

  --border: hsl(214 32% 91%);

  --card: hsl(0 0% 100%);

  --card-foreground: hsl(215 25% 27%);

  --card-border: hsl(214 32% 91%);

  --sidebar: hsl(0 0% 100%);

  --sidebar-foreground: hsl(215 25% 27%);

  --sidebar-border: hsl(214 32% 91%);

  --sidebar-primary: hsl(200 98% 39%);

  --sidebar-primary-foreground: hsl(0 0% 100%);

  --sidebar-accent: hsl(142 71% 45%);

  --sidebar-accent-foreground: hsl(0 0% 100%);

  --sidebar-ring: hsl(200 98% 39%);

  --popover: hsl(0 0% 100%);

  --popover-foreground: hsl(215 25% 27%);

  --popover-border: hsl(214 32% 91%);

  --primary: hsl(200 98% 39%);

  --primary-foreground: hsl(0 0% 100%);

  --secondary: hsl(142 71% 45%);

  --secondary-foreground: hsl(0 0% 100%);

  --muted: hsl(213 27% 84%);

  --muted-foreground: hsl(215 16% 47%);

  --accent: hsl(179 84% 45%);

  --accent-foreground: hsl(0 0% 100%);

  --destructive: hsl(0 84% 60%);

  --destructive-foreground: hsl(0 0% 100%);

  --input: hsl(214 32% 91%);
  --ring: hsl(200 98% 39%);
  --chart-1: hsl(200 98% 39%);
  --chart-2: hsl(142 71% 45%);
  --chart-3: hsl(179 84% 45%);
  --chart-4: hsl(280 65% 60%);
  --chart-5: hsl(340 75% 55%);

  --font-sans: 'Inter', system-ui, -apple-system, sans-serif;
  --font-serif: 'Georgia', serif;
  --font-mono: 'Monaco', monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(215 25% 27% / 0.05);
  --shadow-xs: 0px 2px 0px 0px hsl(215 25% 27% / 0.05);
  --shadow-sm: 0px 2px 0px 0px hsl(215 25% 27% / 0.05), 0px 1px 2px -1px hsl(215 25% 27% / 0.1);
  --shadow: 0px 2px 0px 0px hsl(215 25% 27% / 0.05), 0px 1px 2px -1px hsl(215 25% 27% / 0.1);
  --shadow-md: 0px 2px 0px 0px hsl(215 25% 27% / 0.05), 0px 2px 4px -1px hsl(215 25% 27% / 0.1);
  --shadow-lg: 0px 2px 0px 0px hsl(215 25% 27% / 0.05), 0px 4px 6px -1px hsl(215 25% 27% / 0.1);
  --shadow-xl: 0px 2px 0px 0px hsl(215 25% 27% / 0.05), 0px 8px 10px -1px hsl(215 25% 27% / 0.1);
  --shadow-2xl: 0px 2px 0px 0px hsl(215 25% 27% / 0.05);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: hsl(215 25% 12%);

  --foreground: hsl(217 33% 88%);

  --border: hsl(215 25% 20%);

  --card: hsl(215 25% 15%);

  --card-foreground: hsl(217 33% 88%);

  --card-border: hsl(215 25% 20%);

  --sidebar: hsl(215 25% 15%);

  --sidebar-foreground: hsl(217 33% 88%);

  --sidebar-border: hsl(215 25% 20%);

  --sidebar-primary: hsl(200 98% 45%);

  --sidebar-primary-foreground: hsl(215 25% 12%);

  --sidebar-accent: hsl(142 71% 50%);

  --sidebar-accent-foreground: hsl(215 25% 12%);

  --sidebar-ring: hsl(200 98% 45%);

  --popover: hsl(215 25% 15%);

  --popover-foreground: hsl(217 33% 88%);

  --popover-border: hsl(215 25% 20%);

  --primary: hsl(200 98% 45%);

  --primary-foreground: hsl(215 25% 12%);

  --secondary: hsl(142 71% 50%);

  --secondary-foreground: hsl(215 25% 12%);

  --muted: hsl(215 25% 20%);

  --muted-foreground: hsl(215 16% 65%);

  --accent: hsl(179 84% 50%);

  --accent-foreground: hsl(215 25% 12%);

  --destructive: hsl(0 84% 65%);

  --destructive-foreground: hsl(0 0% 100%);

  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */
  --input: hsl(215 25% 25%);
  --ring: hsl(200 98% 45%);
  --chart-1: hsl(200 98% 45%);
  --chart-2: hsl(142 71% 50%);
  --chart-3: hsl(179 84% 50%);
  --chart-4: hsl(280 65% 65%);
  --chart-5: hsl(340 75% 60%);

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.1);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.1);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.1), 0px 1px 2px -1px hsl(0 0% 0% / 0.2);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.1), 0px 1px 2px -1px hsl(0 0% 0% / 0.2);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.1), 0px 2px 4px -1px hsl(0 0% 0% / 0.2);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.1), 0px 4px 6px -1px hsl(0 0% 0% / 0.2);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.1), 0px 8px 10px -1px hsl(0 0% 0% / 0.2);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.1);
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    @apply font-sans antialiased bg-gradient-to-br from-background via-background to-muted/20 text-foreground min-h-screen;
    background-attachment: fixed;
  }

  /* Enhanced scrollbar styling */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--muted) / 0.3);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--muted-foreground) / 0.3);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--muted-foreground) / 0.5);
  }

  /* Enhanced selection styling */
  ::selection {
    background: hsl(var(--primary) / 0.2);
    color: hsl(var(--primary-foreground));
  }
}

/* Enhanced Mental Health Platform Styling */

/* Floating animations for calming effect */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-6px); }
}

@keyframes glow {
  0%, 100% { 
    box-shadow: 0 0 20px hsl(var(--primary) / 0.1); 
  }
  50% { 
    box-shadow: 0 0 30px hsl(var(--primary) / 0.2), 0 0 40px hsl(var(--secondary) / 0.1); 
  }
}

@keyframes breathe {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes slide-up {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes pulse-gentle {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Enhanced mood emoji animations */
.mood-emoji {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  user-select: none;
  border-radius: 50%;
  position: relative;
  background: transparent;
  border: 2px solid transparent;
}

.mood-emoji:hover {
  transform: scale(1.2) rotate(5deg);
  background: hsl(var(--muted) / 0.1);
  border-color: hsl(var(--border));
}

.mood-emoji.selected {
  transform: scale(1.3);
  filter: drop-shadow(0 8px 25px hsl(var(--primary) / 0.4));
  background: hsl(var(--primary) / 0.1);
  border-color: hsl(var(--primary) / 0.3);
  animation: glow 2s ease-in-out infinite;
}

/* Enhanced suggestion cards */
.suggestion-card {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

.suggestion-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, hsl(var(--foreground) / 0.03), transparent);
  transition: left 0.6s;
}

.suggestion-card:hover {
  transform: translateY(-4px) scale(1.02);
  box-shadow: 
    0 10px 25px hsl(var(--foreground) / 0.1),
    0 0 0 1px hsl(var(--border));
}

.suggestion-card:hover::before {
  left: 100%;
}

/* Enhanced pulse animation */
.pulse-animation {
  animation: pulse-gentle 2s ease-in-out infinite;
}

/* Breathing animation for wellness */
.breathe-animation {
  animation: breathe 4s ease-in-out infinite;
}

/* Float animation for decorative elements */
.float-animation {
  animation: float 3s ease-in-out infinite;
}

/* Slide up animation for page elements */
.slide-up-animation {
  animation: slide-up 0.6s ease-out;
}

/* Fade in animation */
.fade-in-animation {
  animation: fade-in 0.8s ease-out;
}

/* Enhanced streak counter */
.streak-counter {
  background: linear-gradient(135deg, hsl(var(--secondary)) 0%, hsl(var(--accent)) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  position: relative;
  animation: glow 3s ease-in-out infinite;
}

/* Enhanced crisis alert */
.crisis-alert {
  background: linear-gradient(135deg, hsl(var(--destructive) / 0.1) 0%, hsl(var(--destructive) / 0.05) 100%);
  border: 2px solid hsl(var(--destructive) / 0.3);
  backdrop-filter: blur(10px);
  animation: pulse-gentle 2s ease-in-out infinite;
}

/* Glass morphism effects */
.glass-effect {
  backdrop-filter: blur(20px) saturate(180%);
  background: hsl(var(--card) / 0.8);
  border: 1px solid hsl(var(--border) / 0.3);
}

.glass-sidebar {
  backdrop-filter: blur(20px) saturate(180%);
  background: hsl(var(--sidebar) / 0.9);
  border-right: 1px solid hsl(var(--sidebar-border) / 0.3);
}

/* Enhanced focus states for accessibility */
*:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
  border-radius: 4px;
}

/* Enhanced button hover effects */
button:not(.no-enhanced-hover) {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

button:not(.no-enhanced-hover):hover {
  transform: translateY(-1px);
}

/* Enhanced input styling */
input:not([type="range"]) {
  transition: all 0.3s ease;
}

input:not([type="range"]):focus {
  transform: scale(1.02);
  box-shadow: 0 0 0 3px hsl(var(--ring) / 0.2);
}

/* Custom mood slider styling */
input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;
  cursor: pointer;
  transition: all 0.3s ease;
}

input[type="range"]::-webkit-slider-track {
  background: linear-gradient(90deg, 
    hsl(var(--destructive)) 0%, 
    hsl(var(--secondary)) 50%, 
    hsl(var(--accent)) 100%);
  height: 8px;
  border-radius: 4px;
  box-shadow: inset 0 1px 3px hsl(var(--foreground) / 0.1);
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  height: 24px;
  width: 24px;
  border-radius: 50%;
  background: hsl(var(--primary));
  border: 3px solid hsl(var(--card));
  box-shadow: 0 2px 8px hsl(var(--foreground) / 0.2);
  transition: all 0.3s ease;
}

input[type="range"]::-webkit-slider-thumb:hover {
  transform: scale(1.2);
  box-shadow: 0 4px 12px hsl(var(--primary) / 0.4);
}

/* Enhanced card styling */
.card-enhanced {
  background: hsl(var(--card) / 0.95);
  backdrop-filter: blur(10px);
  border: 1px solid hsl(var(--border) / 0.5);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-enhanced:hover {
  background: hsl(var(--card));
  border-color: hsl(var(--border));
  box-shadow: 
    0 10px 25px hsl(var(--foreground) / 0.08),
    0 0 0 1px hsl(var(--border) / 0.3);
  transform: translateY(-2px);
}

/* Achievement badge styling */
.achievement-badge {
  background: linear-gradient(135deg, #FFD700 0%, #FFA500 100%);
  animation: float 2s ease-in-out infinite;
  position: relative;
  overflow: hidden;
}

.achievement-badge::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255,255,255,0.3), transparent);
  transform: rotate(45deg);
  animation: shine 2s linear infinite;
}

@keyframes shine {
  0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

/* Chat message animations */
.chat-message {
  animation: slide-up 0.3s ease-out;
}

.chat-message:nth-child(even) {
  animation-delay: 0.1s;
}

/* Sidebar menu item hover effects */
.sidebar-item {
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.sidebar-item::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 3px;
  background: hsl(var(--sidebar-primary));
  transform: scaleY(0);
  transition: transform 0.3s ease;
}

.sidebar-item:hover::before,
.sidebar-item.active::before {
  transform: scaleY(1);
}

/* Loading spinner enhancement */
.loading-spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Text gradient effects */
.text-gradient-primary {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--secondary)) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-gradient-accent {
  background: linear-gradient(135deg, hsl(var(--accent)) 0%, hsl(var(--primary)) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}
